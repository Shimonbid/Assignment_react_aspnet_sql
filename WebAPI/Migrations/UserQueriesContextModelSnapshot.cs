// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Model;

namespace WebAPI.Migrations
{
    [DbContext(typeof(UserQueriesContext))]
    partial class UserQueriesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Model.Results", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserQueriesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserQueriesId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("WebAPI.Model.UserQueries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateQuery")
                        .HasColumnType("DateTime");

                    b.Property<string>("Query")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("UserQueries");
                });

            modelBuilder.Entity("WebAPI.Model.Results", b =>
                {
                    b.HasOne("WebAPI.Model.UserQueries", "UserQueries")
                        .WithMany()
                        .HasForeignKey("UserQueriesId");

                    b.Navigation("UserQueries");
                });
#pragma warning restore 612, 618
        }
    }
}
